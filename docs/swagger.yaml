basePath: /
definitions:
  api.errorResponse:
    properties:
      message:
        type: string
    type: object
  api.getAllListsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.TodoList'
        type: array
    type: object
  api.signInInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  api.statusResponse:
    properties:
      status:
        type: string
    type: object
  entity.ListItem:
    properties:
      id:
        type: integer
      itemId:
        type: integer
      listId:
        type: integer
    type: object
  entity.TodoItem:
    properties:
      description:
        type: string
      done:
        type: boolean
      id:
        type: integer
      title:
        type: string
    required:
    - title
    type: object
  entity.TodoList:
    properties:
      description:
        type: string
      id:
        type: integer
      title:
        type: string
    required:
    - title
    type: object
  entity.UpdateItemInput:
    properties:
      description:
        type: string
      done:
        type: boolean
      title:
        type: string
    type: object
  entity.User:
    properties:
      name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - name
    - password
    - username
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Server fro TodoList Application
  title: Todo App API
  version: "1.0"
paths:
  /api/items/:id:
    delete:
      consumes:
      - application/json
      description: delete list item
      operationId: delete-list-item
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete List Item
      tags:
      - items
    get:
      consumes:
      - application/json
      description: get list items by id
      operationId: get-list-item-by-id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.TodoItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get List Item By Id
      tags:
      - items
    put:
      consumes:
      - application/json
      description: update todo list item
      operationId: update-list-item
      parameters:
      - description: item info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.UpdateItemInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update todo list item
      tags:
      - items
  /api/lists/:
    get:
      consumes:
      - application/json
      description: get all lists
      operationId: get-all-lists
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.getAllListsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Lists
      tags:
      - lists
    post:
      consumes:
      - application/json
      description: create todo list
      operationId: create-list
      parameters:
      - description: list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.TodoList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create todo list
      tags:
      - lists
  /api/lists/:id:
    delete:
      consumes:
      - application/json
      description: delete list
      operationId: delete-list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete List
      tags:
      - lists
    get:
      consumes:
      - application/json
      description: get list by id
      operationId: get-list-by-id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.ListItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get List By Id
      tags:
      - lists
    put:
      consumes:
      - application/json
      description: update todo list
      operationId: update-list
      parameters:
      - description: list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.TodoList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update todo list
      tags:
      - lists
  /api/lists/:id/items/:
    get:
      consumes:
      - application/json
      description: get all list items
      operationId: get-all-list-items
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.TodoItem'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All List Items
      tags:
      - items
    post:
      consumes:
      - application/json
      description: create todo list item
      operationId: create-list-item
      parameters:
      - description: item info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.TodoItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create todo list Item
      tags:
      - items
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: login
      operationId: login
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/api.signInInput'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: create account
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: SignUp
      tags:
      - auth
swagger: "2.0"
